<?xml version="1.0" encoding="UTF-8" ?>
<project default="package_increment" basedir=".">
    <!-- 加载属性配置文件 -->
    <property file="build.properties"/>
    
    <!-- 项目名称 -->
    <property name="webapp" value="${webapp.name}"/>
    <!-- 目标项目的Web 名称（WEB-INF上一级的目录名称） -->
    <property name="webroot" value="${web.root}"/>
    
    <!-- svn改动文件列表信息 -->
    <property name="diff.file.path" value="${work.dir}/${diff.file}"/>
    
    <!-- svn导出/切出文件存放目录 -->
    <property name="full.source.path" location="${work.dir}/full/source/${webapp}"/>
    <!-- svn导出/切出文件编译后存放目录 -->
    <property name="full.compile.path" location="${work.dir}/full/compile/${webapp}"/>
    <!-- svn增量文件保存目录 -->
    <property name="increment.source.path" location="${work.dir}/increment/source/${webapp}"/>
    <!-- svn增量文件编译后保存目录 -->
    <property name="increment.compile.path" location="${work.dir}/increment/compile/${webapp}"/>
    
    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~构建准备~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    <!-- ANT插件path -->
	<path id="ant.extend.classpath">
		<fileset dir="${ant.extend.path}">
			<include name="**/*.jar" />
		</fileset>
	</path>
    <!-- 项目编译classpath -->
    <path id="build.classpath">
        <fileset dir="${full.source.path}">
            <include name="**/lib/*.jar"/>
        </fileset>
        <fileset dir="${java.home}">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${tomcat.home}/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>
    
    <!-- 全量编译后的lib path -->
    <path id="full.project.classpath">
        <fileset dir="${work.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>
    
    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~引入SVNANT插件~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    <!-- 添加svnant插件 -->
    <typedef resource="org/tigris/subversion/svnant/svnantlib.xml"  classpathref="ant.extend.classpath"/>
    <svnSetting id="svn.settings" javahl="false" svnkit="true" username="${svn.username}" password="${svn.password}" failonerror="true"/>
    
    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~初始化~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    <!-- 初始化 -->
    <target name="init" depends="init_dirs">
        <echo message="Init env ..."/>
        <echo message="checkout svn: ${new.svn.url}"/>
        <echo message="backup svn: ${old.svn.url}"/>
        <echo message="username: ${svn.username}"/>
        <echo message="password: ${svn.password}"/>
        <echo message="webapp: ${webapp}"/>
        <echo message="webroot: ${webroot}"/>
        <echo message="different: ${diff.file.path}"/>
    </target>
    
    <!-- 创建所需文件夹 -->
     <target name="init_dirs">
        <mkdir dir="${work.dir}"/>
        <mkdir dir="${full.source.path}"/>
        <mkdir dir="${increment.source.path}"/>
        <mkdir dir="${increment.compile.path}"/>
    </target>
    
    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~SVN操作~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    <!-- 测试svn是否有效 -->
    <target name="tool-available" depends="init">
        <echo message="run task test svnant is available"></echo>
        <available resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="ant.extend.classpath" property="available.svnant"/>
        <echo message="SVN-ANT is available = ${available.svnant}"></echo>
    </target>
        
    <!-- 检出服务器上最新代码 -->
    <target name="checkout" depends="tool-available">
        <echo message="checkout project code: ${new.svn.url}"></echo>
        <svn refid="svn.settings">
             <checkout url="${new.svn.url}" destPath="${full.source.path}" revision="new.svn.revision" force="true"/>
        </svn>
    </target>

   <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~公共编译~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    <!-- 文件编码处理，处理一个项目中的多种编码问题 -->
    <target name="encoding_process">
        <java classname="com.zhangzq.svnant.FileEncodingConvert" classpathref="ant.extend.classpath" fork="true">
            <arg value="${source.path}"/>
            <arg value="${javac.encoding}"/>
        </java>
    </target>
    
    <!-- javac编译 -->
    <target name="compile">
        <echo>compile ${source.path} ......</echo>
        <delete dir="${compile.path}" failonerror="false" deleteonexit="true" excludes="**/lib"  includeemptydirs="true"/>
        <mkdir dir="${compile.path}/classes"/>
        <mkdir dir="${source.path}/src"/>
        
        <antcall target="encoding_process">
            <param name="source.path" value="${source.path}"/>
        </antcall>
        
        <javac nowarn="true" debug="${javac.debug}" 
            debuglevel="${javac.debuglevel}" 
            srcdir="${source.path}/src"
            destdir="${compile.path}/classes" 
            source="${javac.source}" 
            target="${javac.target}" 
            encoding="${javac.encoding}" 
            fork="true" 
            memoryMaximumSize="512m" 
            includeantruntime="false">
            
            <compilerarg value="-Xlint:unchecked"/>
            <compilerarg value="-Xlint:deprecation"/>
            <compilerarg value="-Xlint"/>
            
            <classpath refid="build.classpath"/>
            <classpath refid="full.project.classpath"/>
        </javac>
    </target>
    
     <!-- 利用jdt编译class 解决泛型不能转换的问题 需要将
        jdtCompilerAdapter.jar
        org.eclipse.jdt.compiler.tool_1.0.1.v_793_R33x.jar
        org.eclipse.jdt.core_3.3.3.v_793_R33x.jar
        org.eclipse.jdt.debug.ui_3.2.102.v20071002_r332.jar
        复制到ant_home/lib目录下
    <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
    -->
    <!-- 利用JDT编译 
    <target name="compile_jdt">
        <echo>compile ${source.path} ......</echo>
        <delete dir="${compile.path}" failonerror="false" deleteonexit="true" excludes="**/lib"/>
        <mkdir dir="${compile.path}/classes"/>
        
        <javac compiler="org.eclipse.jdt.core.JDTCompilerAdapter" 
            nowarn="true" 
            debug="${javac.debug}" 
            debuglevel="${javac.debuglevel}" 
            srcdir="${source.path}/src"
            destdir="${compile.path}/classes" 
            source="${javac.source}" 
            encoding="${javac.encoding}" 
            target="${javac.target}" 
             
            fork="true" 
            memoryMaximumSize="512m" 
            includeantruntime="false">
        
            
            <classpath refid="build.classpath"/>
            <classpath refid="full.project.classpath"/>
        </javac>
    </target>-->
    
    
    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~公共打包~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    <!-- 打包 -->    
    <target name="war">
        <echo>package war file....</echo>
        
        <copy todir="${compile.path}" failonerror="false">
            <fileset dir="${source.path}/${webroot}" includes="**"/>
        </copy>
        <move todir="${compile.path}/WEB-INF/classes" failonerror="false">
            <fileset dir="${compile.path}/classes" />
        </move>
        <copy todir="${compile.path}/WEB-INF/classes" failonerror="false">
            <fileset dir="${source.path}/src/main/" includes="**/*.xml, **/*.properties, **/*.xsd"/>
            <fileset dir="${source.path}/src/test/" includes="**/*.xml, **/*.properties, **/*.xsd"/>
            <fileset dir="${source.path}/src/resource/" includes="**/*.xml, **/*.properties, **/*.xsd"/>
        </copy>
        
        <!--得到当前日期--> 
        <tstamp> 
            <format property="DSTAMP" pattern="yyyyMMdd" locale="zh"/> 
            <format property="TSTAMP" pattern="HHmmss" locale="zh"/> 
        </tstamp> 
        
        <war destfile="${work.dir}/${webapp}_${DSTAMP}_${TSTAMP}.war" basedir="${compile.path}" webxml="${compile.path}/WEB-INF/web.xml"/>        
    </target>
    
    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~全量打包~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    
    <!-- 编译全量代码 -->
    <target name="compile_full" depends="checkout">
        <echo message="compile full source code..."/>
        <antcall target="compile">
            <param name="source.path" value="${full.source.path}"/>
            <param name="compile.path" value="${full.compile.path}"/>
        </antcall>
    </target>
    
    <!-- 全部打包 -->    
    <target name="package_full" depends="compile_full">
        <antcall target="war">
            <param name="source.path" value="${full.source.path}"/>
            <param name="compile.path" value="${full.compile.path}"/>
        </antcall>        
    </target>
    
    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~增量打包~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    
     <!-- 将全部项目的class 建立jar包 -->
    <target name="jar_full" depends="compile_full">
        <jar destfile="${work.dir}/lib/${webapp}.jar" level="9" compress="true" encoding="utf-8" basedir="${full.compile.path}/classes">
            <manifest>
                <attribute name="Implementation-Version" value="Version: 2.2"/>
            </manifest>
        </jar>
    </target>

    <!-- 比较差异 增量文件 -->
    <target name="diff">
         <svn refid="svn.settings">
            <diffSummarize 
                oldUrl="${old.svn.url}" 
                oldTargetRevision="${new.svn.revision}" 
                newUrl="${new.svn.url}" 
                newTargetRevision="${old.svn.revision}" 
                outFile="${diff.file.path}" 
                recurse="true"
             />
         </svn>
    </target>
    
    <!-- 导出增量文件 -->
    <target name="increment" depends="diff">
        <delete dir="${increment.source.path}" includes="**/*" includeemptydirs="true"/>
        <java classname="com.zhangzq.svnant.ExportIncrementFiles" classpath="${ant.home}/lib/ExportIF.jar" fork="true">
            <arg value="${diff.file.path}"/>
            <arg value="${full.source.path}/"/>
            <arg value="${increment.source.path}/"/>
        </java>
    </target>

    <!-- 编译增量代码 -->
    <target name="compile_increment" depends="jar_full,increment">
        <echo message="compile increment source code..."/>
        <antcall target="compile">
            <param name="source.path" value="${increment.source.path}"/>
            <param name="compile.path" value="${increment.compile.path}"/>
        </antcall>
    </target>
    
     <!-- 增量打包 -->    
    <target name="package_increment" depends="compile_increment">
        <copy todir="${increment.compile.path}/WEB-INF" file="${full.source.path}/${webroot}/WEB-INF/web.xml"/>
        <antcall target="war">
            <param name="source.path" value="${increment.source.path}"/>
            <param name="compile.path" value="${increment.compile.path}"/>
        </antcall>        
    </target>

   <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~svn log~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
   <!-- 导出svn提交日志 -->
   <target name="svn_log">
        <echo message="checkout svn log: ${new.svn.url}"></echo>
         <mkdir dir="${log.file.path}"/>
        
        <tstamp> 
            <format property="DSTAMP" pattern="yyyyMMdd" locale="zh"/> 
            <format property="TSTAMP" pattern="HHmmss" locale="zh"/> 
        </tstamp> 
        
        <svn refid="svn.settings">
             <log 
                url="${new.svn.url}" 
                changedpathes="${log.changed.pathes}" 
                startRevision="${log.start.revision}"
                stopRevision="${log.end.revision}"
                destFile="${log.file.path}/svn_${DSTAMP}_${TSTAMP}.log" 
                limit="${log.svn.limit}" 
                asXml="false"
             />
        </svn>
    </target>
</project>